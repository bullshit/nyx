/*------------------------------------------------------------------------------
  Plugins DSL block
  https://docs.gradle.org/current/userguide/plugins.html#sec:plugins_block
------------------------------------------------------------------------------*/
plugins {
    id 'java-library'         // See: https://docs.gradle.org/current/userguide/java_library_plugin.html
}

/*------------------------------------------------------------------------------
  Local sub-project properties
------------------------------------------------------------------------------*/
description = 'The Nyx Git library.'

/*------------------------------------------------------------------------------
  Configurations
*/
configurations {
  // Create a new configuration used by other projects to use classes from this project.
  // In particular we need the Git scripts (in the test source set) to be available for other projects.
  // This is actually not trivial and we had to follow directions from this post:
  // - https://softnoise.wordpress.com/2014/09/07/gradle-sub-project-test-dependencies-in-multi-project-builds/
  testExport.extendsFrom(testRuntime)
}

/*------------------------------------------------------------------------------
  Repositories and dependencies
  https://docs.gradle.org/current/userguide/dependency_management_for_java_projects.html
*/
dependencies {
  api                    'org.eclipse.jgit:org.eclipse.jgit:5.10.0.202012080955-r'  // JGit (https://www.eclipse.org/jgit/)
  implementation         'org.slf4j:slf4j-api:1.7.30'                               // SLF4J API (http://www.slf4j.org/)
  implementation         'com.fasterxml.jackson.core:jackson-databind:2.12.0'       // Jackson JSON library (https://github.com/FasterXML/jackson)

  // See the 'testExport' about this
  testExport             sourceSets.test.output
}

test {
  // Pass the credentials to test suites as per https://github.com/mooltiverse/nyx/blob/master/CONTRIBUTING.md#contributing-code
  // Suggestion is to set the $GRADLE_USER_HOME environment variable and create a gradle.properties therein, with these
  // properties defined
  systemProperty 'gitHubTestUserToken', findProperty("gitHubTestUserToken")
  systemProperty 'gitLabTestUserToken', findProperty("gitLabTestUserToken")
}
