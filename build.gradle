/*------------------------------------------------------------------------------
  Plugins DSL block
  https://docs.gradle.org/current/userguide/plugins.html#sec:plugins_block
------------------------------------------------------------------------------*/
plugins {
    // Builds a dependency tree of Gradle tasks, i.e. 'gradle <task> taskTree'
    // (at times it doesn't work when using the ./gradlew wrapper).
    // This plugin can be commented out and used only when needed.
    // See: https://github.com/dorongold/gradle-task-tree
    id "com.dorongold.task-tree" version "1.5"

    // Use our own plugin for release management
    id "com.mooltiverse.oss.nyx" version "0.0.2-alpha.4"
}

/*------------------------------------------------------------------------------
  Root project properties
------------------------------------------------------------------------------*/
description = 'Nyx is a portable and flexible semantic release tool.'

allprojects {
  // See: https://docs.gradle.org/current/userguide/base_plugin.html
  apply plugin: 'base'

  /*------------------------------------------------------------------------------
    Project overall attributes
  ------------------------------------------------------------------------------*/
  group   = 'com.mooltiverse.oss.nyx'

  // The followings can be removed once we start using the Nyx plugin
  ext.isReleaseVersion = version.matches("^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\$")
  ext.isPrereleaseVersion = version.matches("^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))\$")

  // This task is useful to see all the configurations for projects. Run this with 'gradle configurations'
  task configurations() {
    description 'Prints the project configurations'
    group 'Help'

    doLast() {
      println "Project Name: $project.name configurations:"
      configurations.each {
        println "    $it.name"
      }
    }
  }


  task listBumpDirContents() {
    doLast() {
      println ">->->- "+project.name
      def names = []
      fileTree(project.buildDir).visit { FileVisitDetails details -> 
          names << details.file.path
          println "       "+details.file.path
      }
      println "<-<-<- "+project.name
    }
  }
}

/*------------------------------------------------------------------------------
  Extension configurations
------------------------------------------------------------------------------*/
// Use our own plugin for release management
nyx {
  // Just bump the pre-release 'alpha' identifier until we have the commit
  // message conventions implemented.
  // This causes all new commits to bump the 'alpha' identifier, regardless
  // how significant are the changes in the release scope.
  bump = 'alpha'
}

/*------------------------------------------------------------------------------
  Additional task dependencies
------------------------------------------------------------------------------*/

